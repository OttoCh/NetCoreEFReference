@model List<Blog>

@{
    ViewData["Title"] = "Add Post";
}

<h2>Add Post</h2>

<h4>Post</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="AddPost">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label id="BlogId" class="control-label"></label>
                <select id="BlogId" name="BlogId" class="form-control">
                    @foreach(var item in Model)
                    {
                        <option value="@item.BlogId">@item.BlogId - @item.Url </option>
                    }
                </select>
            </div>

            @*<div class="form-group">
                <label asp-for="BlogId" class="control-label"></label>
                <select asp-for="BlogId" class="form-control" asp-items="ViewBag.BlogId"></select>
            </div>*@

            <div class="form-group">
                <label id="Title" class="control-label">Title</label>
                <input id="Title" name="Title" class="form-control" />
                @*<span asp-validation-for="Title" class="text-danger"></span>*@
            </div>
            <div class="form-group">
                <label id="Content" class="control-label">Content</label>
                <textarea id="Content" name="Content" class="form-control"></textarea>
                @*<span asp-validation-for="Content" class="text-danger"></span>*@
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
